name: Test and push stonks-api Docker image to GCCR.

on:
  push:
    branches:
      - master
    paths:
      - stonks-api/**
      - stonks-types/**
      - docker/stonks-api.prod.Dockerfile
      - .github/stonks-api-docker.yml
  pull_request:
    branches: 
      - master
    paths:
      - stonks-api/**
      - stonks-types/**
      - docker/stonks-api.prod.Dockerfile
      - .github/stonks-api-docker.yml

jobs:

  test-and-push:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      working-directory: ./stonks-api
      IMAGE_NAME: eu.gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.STONKS_API_APP_NAME }}
    
    services:
      database:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: test_stonks
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      
      - name: Build image
        run: docker build . --file ./docker/stonks-api.prod.Dockerfile -t $IMAGE_NAME
          
      - name: Run tests
        # run prestart (db migrations) and tests
        run: docker run -e ENV=test $IMAGE_NAME ./scripts/prestart.sh && pipenv run test -svvv
        working-directory: ${{env.working-directory}}
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_stonks

      - name: Login to Google Cloud
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          service_account_email: ${{ secrets.GCP_EMAIL }}
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}
          
      - name: Configure Docker
        run: gcloud auth configure-docker --quiet
                
      - name: Push Docker image
        run: docker push $IMAGE_NAME
